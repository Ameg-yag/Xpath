{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"_re",
				"_retVal"
			],
			[
				"_db",
				"_dbName"
			],
			[
				"db",
				"Dbname"
			],
			[
				"s",
				"split"
			],
			[
				"com",
				"compat_httperr"
			],
			[
				"compat_ur",
				"compat_urlerr"
			],
			[
				"res",
				"resp"
			],
			[
				"compat",
				"compat_urlerr"
			],
			[
				"cols",
				"cols"
			],
			[
				"tyr",
				"try\tTry/Except/Else"
			],
			[
				"Str",
				"Str1"
			],
			[
				"Pay",
				"Payload"
			],
			[
				"_tables",
				"_tables"
			],
			[
				"_path",
				"_PathLogs"
			],
			[
				"to",
				"tor"
			],
			[
				"_tab",
				"_tabulate"
			],
			[
				"Quer",
				"QueryPretty"
			],
			[
				"cur",
				"cursor"
			],
			[
				"Col",
				"Cols"
			],
			[
				"t",
				"try\tTry/Except/Else"
			],
			[
				"COl",
				"Cols"
			],
			[
				"it",
				"itr"
			],
			[
				"__",
				"__dlist"
			],
			[
				"_dumped",
				"_dumped"
			],
			[
				"Se",
				"SessionShow"
			],
			[
				"Sess",
				"SessionInsert"
			],
			[
				"Cols",
				"ColsToCreate"
			],
			[
				"__d",
				"__dlist"
			],
			[
				"cle",
				"_clean"
			],
			[
				"_dbn",
				"_dbn"
			],
			[
				"_d",
				"__dlist"
			],
			[
				"app",
				"append"
			],
			[
				"fin",
				"FinalCountQuery_replaced"
			],
			[
				"el",
				"else"
			],
			[
				"col",
				"col"
			],
			[
				"d",
				"dump"
			],
			[
				"Xpath",
				"Xpath"
			],
			[
				"cu",
				"current_user"
			],
			[
				"Dat",
				"Database"
			],
			[
				"Xpat",
				"Xpath"
			],
			[
				"opti",
				"options"
			],
			[
				"ad",
				"add_option"
			],
			[
				"OP",
				"OptionGroup"
			],
			[
				"Tb",
				"TblName"
			],
			[
				"_Tb",
				"_Tbls"
			],
			[
				"_t",
				"_Tblc"
			],
			[
				"tbl",
				"TblName"
			],
			[
				"H",
				"HTTPReqCount"
			],
			[
				"_",
				"_data"
			],
			[
				"colCl",
				"colClp"
			],
			[
				"_na",
				"_name"
			],
			[
				"_tbl",
				"_tblName"
			],
			[
				"colCL",
				"colCls"
			],
			[
				"_tabl",
				"_tables"
			],
			[
				"tb",
				"tbl"
			],
			[
				"Tbl",
				"TblName"
			],
			[
				"TblNa",
				"TblName"
			],
			[
				"Db",
				"Dbname"
			],
			[
				"Pa",
				"Payloads"
			],
			[
				"colTb",
				"colTbs"
			],
			[
				"Que",
				"QueryToTest"
			],
			[
				"dbs",
				"dbsCount"
			],
			[
				"_col",
				"_colAlterCount"
			],
			[
				"Payloa",
				"Payloads"
			],
			[
				"Payload",
				"PayloadDump"
			],
			[
				"DB_",
				"DB_NAMES"
			],
			[
				"DB",
				"DB_COUNT"
			],
			[
				"_name",
				"_nameList"
			],
			[
				"colDb",
				"colDbs"
			],
			[
				"_tabe",
				"_tablePayload"
			],
			[
				"_table",
				"_tableSession"
			],
			[
				"_colDbs",
				"_colDbsName"
			],
			[
				"cure",
				"CURRENTUSER"
			],
			[
				"CURRE",
				"CURRENTUSER"
			],
			[
				"tr",
				"try\tTry/Except/Else"
			],
			[
				"_cols",
				"_colsPayload"
			],
			[
				"_co",
				"_columns"
			],
			[
				"colD",
				"colDbp"
			],
			[
				"_pa",
				"_payload"
			],
			[
				"pay",
				"PayloadDbs"
			],
			[
				"colP",
				"colPld"
			],
			[
				"dbsNa",
				"dbsName"
			],
			[
				"dbn",
				"_dbn"
			],
			[
				"_dbs",
				"_dbsQuery"
			],
			[
				"Q",
				"QueryIndex"
			],
			[
				"Qur",
				"Query_Test"
			],
			[
				"_cdb",
				"_cdbs"
			],
			[
				"_c",
				"_col"
			],
			[
				"resp",
				"resp"
			],
			[
				"compa",
				"compat_urlopen"
			],
			[
				"Xpa",
				"XpathBasic"
			],
			[
				"X",
				"XpathBasicInject"
			],
			[
				"_Pa",
				"_PathPloads"
			],
			[
				"tit",
				"title"
			],
			[
				"N",
				"Name"
			],
			[
				"ex",
				"except"
			],
			[
				"Co",
				"Col"
			],
			[
				"co",
				"Col"
			],
			[
				"bn",
				"banner"
			],
			[
				"v",
				"Ver"
			],
			[
				"_Path",
				"_PathSession"
			],
			[
				"f",
				"f"
			],
			[
				"plo",
				"plods"
			],
			[
				"compat_re",
				"compat_request"
			],
			[
				"sel",
				"self"
			],
			[
				"Query",
				"QueryShow"
			],
			[
				"TIT",
				"TITLE"
			],
			[
				"Cre",
				"Create"
			],
			[
				"_Pat",
				"_PathSession"
			],
			[
				"Crea",
				"CreateSession"
			],
			[
				"Sq",
				"SQLiteSession"
			],
			[
				"se",
				"self"
			],
			[
				"p",
				"payload"
			],
			[
				"ret",
				"retTgt"
			],
			[
				"user",
				"user_agent_unix"
			],
			[
				"re",
				"requests"
			],
			[
				"T",
				"TITLE"
			],
			[
				"try",
				"try\tTry/Except/Else"
			],
			[
				"log",
				"logFile"
			],
			[
				"pth",
				"pthread"
			],
			[
				"url",
				"url_dl"
			],
			[
				"vi",
				"video_id"
			],
			[
				"for",
				"formats"
			],
			[
				"lyn",
				"lynda_dict"
			],
			[
				"lec",
				"lecture_number"
			],
			[
				"chap",
				"chapter_number"
			],
			[
				"cha",
				"chap"
			],
			[
				"course",
				"course_path"
			]
		]
	},
	"buffers":
	[
		{
			"file": "xpath.py",
			"settings":
			{
				"buffer_size": 16663,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Xtract/_Xpath.py",
			"settings":
			{
				"buffer_size": 81064,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Xtract/_Error.py",
			"settings":
			{
				"buffer_size": 81244,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Xtract/_Geometric.py",
			"settings":
			{
				"buffer_size": 81077,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Xtract/_BigintDouble.py",
			"settings":
			{
				"buffer_size": 80820,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 360.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 432.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/r0ot_h3x49/Desktop/Xpath",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract"
	],
	"file_history":
	[
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract/_Xpath.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract/_Error.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract/_BigintDouble.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract/_Geometric.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract/Payload/XpathPayloads.py",
		"/E/Education (UIT)/Final Year Project/Final year project design/Online_Report_Generation_Tool_Design/design/js/validator.min.js",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract/_compat.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/banner/banner.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract/Payload/ErrorPayloads.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract/_Session.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract/Payload/GeomtPayloads.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract/Payload/BigintDoublePayloads.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract/__init__.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract/Payload/__init__.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract/Payload/DoublePayloads.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract/payload/__init__.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath/Xtract/payload/PayloadsErrorBased.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath_New/Xtract/_compat.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath_New/Xtract/_Session.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath_New/Xtract/__init__.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath_New/Xtract/beauti/__init__.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath_New/Xtract/xpath_old.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath_New/Xtract/payload/PayloadsExtractValue.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath_New/banner.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath_New/Xtract/_XpathN.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath_New/Xtract/XpathN.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath_New/Xtract/compat.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath_New/xpath.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath_New/Xtract/xpath.py",
		"/C/Users/r0ot_h3x49/Desktop/Xpath_New/Xtract/Xpath.py",
		"/E/Hacking/Server rooting/Server rooting exploits/dirtycow-2016 compiled/dirty.c",
		"/E/Hacking/Server rooting/Server rooting exploits/dirtycow-master/dirty.c",
		"/E/Hacking/Shells/Dhanush/contract.php",
		"/E/Hacking/Shells/Dhanush/r0ot.php",
		"/E/Hacking/Shells/Dhanush/search_result.php",
		"/C/Users/r0ot_h3x49/Desktop/Reverse-Shell.c",
		"/C/netcat/netcat.c",
		"/C/netcat/doexec.c",
		"/C/Users/r0ot_h3x49/Desktop/exploit-code/mysql-privesc-race.c",
		"/C/Users/r0ot_h3x49/Desktop/extra/calc.y",
		"/C/Users/r0ot_h3x49/Desktop/extra/calc.l",
		"/C/Users/r0ot_h3x49/Desktop/temp/lynda_dl/_extractor.py",
		"/C/Users/r0ot_h3x49/Desktop/Labs_compiler/Solutions/Lab 07/code/infix.y",
		"/C/Users/r0ot_h3x49/Desktop/Labs_compiler/Solutions/Lab 07/code/prefix.y",
		"/C/Users/r0ot_h3x49/Desktop/Labs_compiler/Solutions/Lab 07/code/calc.l",
		"/C/Users/r0ot_h3x49/Desktop/Labs_compiler/Solutions/Lab 07/code/calc.y",
		"/C/Users/r0ot_h3x49/Desktop/lynda-dl.py",
		"/C/Users/r0ot_h3x49/Desktop/extras/test.py",
		"/C/Users/r0ot_h3x49/Desktop/Lynda_courses/test.py",
		"/E/Hacking/Hacking Stuff/Server rooting/Server rooting exploits/gujjar bhai rooting talk.txt",
		"/C/Users/r0ot_h3x49/Desktop/lex.yy.c",
		"/C/Users/r0ot_h3x49/Desktop/hello.y"
	],
	"find":
	{
		"height": 21.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"\t\t\texcept KeyboardInterrupt:\n\t\t\t\tprint '\\n' + compat_color.fr + compat_color.sn + '['+compat_strftime(\"%H:%M:%S\")+'] [ERROR] user aborted'\n\t\t\t\tprint compat_color.fw + compat_color.sn + \"\\n[*] shutting down at \"+compat_strftime(\"%H:%M:%S\")+\"\\n\"",
			"respdata.split(\"Illegal non geometric '(select `p`.`root` from (select '~\")[1].split(\"' AS `root`\")[0]",
			"if \"Illegal non geometric\" in respdata:",
			"respdata.split(\"Illegal non geometric '(select `p`.`root` from (select '~\")[1].split(\"' AS `root`\")[0]",
			"if \"Illegal non geometric\" in respdata:",
			"respdata.split(\"Illegal non geometric '(select `p`.`root` from (select '~\")[1].split(\"' AS `root`\")[0]",
			"' AS `e`",
			"Xpath",
			"if \"Duplicate entry '~\" in respdata:",
			"respdata.split(\"Duplicate entry '~\")[1].split(\"1' for key 'group_key'\")[0]",
			"timeout=10",
			"respdata.split(\"Duplicate entry '~\")[1].split(\"1' for key 'group_key'\")[0]",
			"if 'XPATH syntax error' in respdata:",
			"respdata.split(\"Duplicate entry '~\")[1].split(\"1' for key 'group_key'\")[0]",
			"if \"XPATH syntax error: '~\" in respdata:",
			"respdata.split(\"Duplicate entry '~\")[1].split(\"1' for key 'group_key'\")[0]",
			"respdata.split(\"XPATH syntax error: '~\")[1].split(\"'\")[0]",
			"store_dest",
			"const",
			"XpathAdvance",
			"# elif self._url and self._data:\n\t\t# \tpass",
			"# if self._url and not self._data:",
			"if self._url and not self._data:",
			"fetching",
			"print compat_color.fg + compat_color.sd + \"[\"+compat_strftime(\"%H:%M:%S\")+\"] [INFO] fetching %s\"",
			"fetching %s\" % (_nameList)",
			"_nameList",
			"_name",
			"_nameList",
			"print \"\\n\" + compat_color.fg + compat_color.sn + \"[\"+compat_strftime(\"%H:%M:%S\")+\"] [INFO] fetched data logged to text files under '%s'\" % (self._PathLogs)",
			"print compat_color.fg + compat_color.sn + \"[\"+compat_strftime(\"%H:%M:%S\")+\"] [INFO] fetched data logged to text files under '%s'\" % (self._PathLogs)",
			"XpathInject",
			"XpathAdvance",
			"if _name",
			"if _name == 'posix'",
			"if _name is \"posix\" else",
			"XpathBasicInject",
			"\n\t\t\t\n\t\t\tsess.close()",
			"sess = open(str(ses), \"a\")",
			"self.PayloadDbs",
			"Basics",
			"Success",
			"Update",
			"madviseThread"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"respdata.split(\"Injected~\")[1].split(\"~END\")[0]",
			"if \"Injected~\" in respdata:",
			"respdata.split(\"Injected~\")[1].split(\"~END\")[0]",
			"if \"Injected~\" in respdata:",
			"respdata.split(\"Injected~\")[1].split(\"~END\")[0]",
			"' AS `root`",
			"SQLi",
			"if \"Illegal non geometric\" in respdata:",
			"respdata.split(\"Illegal non geometric '(select `p`.`root` from (select '~\")[1].split(\"' AS `e`\")[0]",
			"timeout=self._timeout",
			"if \"Duplicate entry '~\" in respdata:",
			"respdata.split(\"Duplicate entry '~\")[1].split(\"1' for key 'group_key'\")[0]",
			"store_true",
			"dest",
			"",
			"print \"\\n\" + compat_color.fg + compat_color.sn + \"[\"+compat_strftime(\"%H:%M:%S\")+\"] [INFO] fetched data logged to text files under '%s'\" % (self._PathLogs)",
			"if os.name",
			"if _osname == 'posix'",
			"if _osname is \"posix\" else",
			"XpathInject",
			"",
			"TargetDumped",
			"Basics"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "xpath.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16663,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2964.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Xtract/_Xpath.py",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 81064,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Xtract/_Error.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 81244,
						"regions":
						{
						},
						"selection":
						[
							[
								81244,
								81244
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 24167.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "Xtract/_Geometric.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 81077,
						"regions":
						{
						},
						"selection":
						[
							[
								81077,
								81077
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 24063.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Xtract/_BigintDouble.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 80820,
						"regions":
						{
						},
						"selection":
						[
							[
								80820,
								80820
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 24167.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 21.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "SQLi.sublime-project",
	"replace":
	{
		"height": 38.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 231.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
